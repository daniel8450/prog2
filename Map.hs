--module Map
  --where
import Data.List

list :: [String]
list =          [("_","_","_","_","_","_","_","_",  "\n",)
                 "_","_","_","_","_","*","_","_",   "\n",
                 "_","_","_","_","_","_","_","_", "\n",
                 "_","_","_","_","_","_","_","_",
                 "_","_","_","_","_","_","_","_",
                 "_","_","_","_","_","_","_","_",
                 "_","_","_","_","_","_","_","_",
                 "_","_","_","_","_","_","_","_",
                 "_","_","_","_","_","_","_","_", 
                 "_","_","_","_","_","_","_","_", 
                 "_","_","_","_","_","_","_","_", 
                 "_","_","_","_","_","_","_","_",
                 "_","_","_","_","_","_","_","_",
                 "_","_","_","_","_","_","_","_", 
                 "_","_","_","_","_","_","_","_", 
                 "_","_","_","_","_","_","_","_"]
                 
              
--printIt :: [Char] -> IO ()
--printIt (x:xs) = do


       

                                                  
up :: [String] -> Int -> [String]
up x n = do
        drop n x
      --  x ++ ['_']

        

--down :: [Char] -> Int -> [Char]
--down x n = [new_element : x | x <- [0..n]]

main = do
     let x = (up list 8)
     print x

 
     
  
